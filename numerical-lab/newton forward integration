import math

def forward_difference(values):
    diff_table = [values]
    for i in range(1, len(values)):
        current_row = []
        for j in range(len(values) - i):
            current_row.append(values[j+1] - values[j])
        diff_table.append(current_row)
        values = current_row
    return diff_table

def newton_forward_interpolation(x_values, y_values, x, n):
    diff_table = forward_difference(y_values)
    result = y_values[0]
    h = x_values[1] - x_values[0]
    p = (x - x_values[n]) / h
    term = p
    for i in range(1, n + 1):
        result += term * diff_table[i][0] / math.factorial(i)
        term *= (p - i)
    return result

x_values = [0, 1, 2, 3, 4]
y_values = [1, 2, 3, 4, 5]
x_to_estimate = 2.5
n = len(x_values)

estimated_value = newton_forward_interpolation(x_values, y_values, x_to_estimate, n)
print(f"Estimated value at x = {x_to_estimate} is: {estimated_value}")
